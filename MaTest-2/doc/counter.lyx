#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass amsart
\use_default_options false
\begin_removed_modules
theorems-ams
\end_removed_modules
\begin_modules
eqs-within-sections
figs-within-sections
theorems-ams-bytype
theorems-ams-extended-bytype
\end_modules
\language spanish
\inputencoding utf8
\font_roman charter
\font_sans default
\font_typewriter default
\font_default_family sfdefault
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 0
\cite_engine natbib_authoryear
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Subsection
Estructura abaco
\end_layout

\begin_layout Definition
Llamamos abaco a una estructura del tipo 
\begin_inset Formula $\langle X,E,V,f\rangle$
\end_inset

 donde:
\end_layout

\begin_layout Itemize
\begin_inset Formula $X$
\end_inset

 es un conjunto de variables, ordenado y finito, 
\begin_inset Formula $X=\left\{ x_{1},\ldots,x_{n}\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $E$
\end_inset

 es un conjunto de estados, ordenado y finito, 
\begin_inset Formula $E=\left\{ e_{1},\ldots,e_{n}\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $V$
\end_inset

 es la n-tupla dada por la sucesión de las variables de 
\begin_inset Formula $X$
\end_inset

, 
\begin_inset Formula $V=\left(x_{1},\ldots,x_{n}\right)$
\end_inset

, a la que llamaremos vector del abaco.
\end_layout

\begin_layout Itemize
\begin_inset Formula $f$
\end_inset

 es la función 
\begin_inset Formula $f:X\longrightarrow E$
\end_inset

, inyectiva.
\end_layout

\begin_layout Definition
Llamaremos a la n-tupla 
\begin_inset Formula $\left(f(x_{1}),\ldots,f(x_{n})\right)$
\end_inset

 estado del vector.
\end_layout

\begin_layout Standard
Llamamos orden del vector al número de elementos de 
\begin_inset Formula $X$
\end_inset

 y base del vector al número de elementos de 
\begin_inset Formula $E$
\end_inset

.
\end_layout

\begin_layout Theorem
El número total de estados posibles del vector 
\begin_inset Formula $n$
\end_inset

 viene dado por la expresión:
\begin_inset Formula \[
n=orden^{base}\]

\end_inset


\end_layout

\begin_layout Subsection
Algoritmo contador
\end_layout

\begin_layout Standard
Algoritmo que efectúa una acción sobre el vector 
\begin_inset Formula $V$
\end_inset

 para todos y cada uno de los posibles estados del vector:
\end_layout

\begin_layout Algorithm
Contador
\end_layout

\begin_layout LyX-Code
Para 
\begin_inset Formula $i\leftarrow1$
\end_inset

 hasta 
\begin_inset Formula $i=orden$
\end_inset

, 
\begin_inset Formula $i\in\mathbb{N}$
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $x_{i}\leftarrow e_{1}$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
Fin Para
\end_layout

\begin_layout LyX-Code
acción sobre 
\begin_inset Formula $V$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow0$
\end_inset


\end_layout

\begin_layout LyX-Code
Hacer
\end_layout

\begin_deeper
\begin_layout LyX-Code
Si 
\begin_inset Formula $f(x_{i})<e_{base}$
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $x_{i}\leftarrow f(x_{i+1})$
\end_inset


\end_layout

\begin_layout LyX-Code
acción sobre 
\begin_inset Formula $V$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow0$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
Si no
\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $x_{i}\leftarrow e_{1}$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow i+1$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
Fin Si
\end_layout

\end_deeper
\begin_layout LyX-Code
Mientras 
\begin_inset Formula $i\leq orden$
\end_inset


\end_layout

\begin_layout Standard
o, equivalentemente:
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow0$
\end_inset

, 
\begin_inset Formula $i\in\mathbb{N}$
\end_inset


\end_layout

\begin_layout LyX-Code
Mientras 
\begin_inset Formula $\exists x_{i}$
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $x_{i}\leftarrow e_{1}$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow i+1$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
Fin Mientras
\end_layout

\begin_layout LyX-Code
acción sobre 
\begin_inset Formula $V$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow0$
\end_inset


\end_layout

\begin_layout LyX-Code
Hacer
\end_layout

\begin_deeper
\begin_layout LyX-Code
Si 
\begin_inset Formula $f(x_{i})<e_{base}$
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $x_{i}\leftarrow f(x_{i+1})$
\end_inset


\end_layout

\begin_layout LyX-Code
acción sobre 
\begin_inset Formula $V$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow0$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
Si no
\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $x_{i}\leftarrow e_{1}$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow i+1$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
Fin Si
\end_layout

\end_deeper
\begin_layout LyX-Code
Mientras 
\begin_inset Formula $\exists x_{i}$
\end_inset


\end_layout

\begin_layout LyX-Code
Fin Hacer
\end_layout

\end_body
\end_document
